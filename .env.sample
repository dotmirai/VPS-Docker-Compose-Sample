# This file is used to store all the environment variables that are used in the compose.yaml file.
# This file should be in the same directory as the compose.yaml file.
#
# SECRET_KEY values should be generated using one of the following commands by running them in your terminal.
#
# Windows: [System.Guid]::NewGuid().ToString("N").Substring(0, 32)
# Linux/MacOS: openssl rand -hex 16
#
# Your JACKETT_API_KEY and PROWLARR_API_KEY should be left blank on the first run. 
# Once you have started the containers, you can find the API keys in the respective web UIs.
# IMPORTANT: Ensure you add authentication to prowlarr/jackett as they will be public. You can set a username and password in the web UI. 
#
# Your PASSWORD values should be a randomly generated password.
#
# Your HOSTNAME values should be the domain name that you are using to access the services. 
# e.g. AIOSTREAMS_HOSTNAME=aiostreams.example.com
#
# POSTGRES credentials can be left as is, as they are only accessed internally.

DOCKER_DATA_DIR=./data

# AIOSTREAMS ENVIRONMENT VARIABLES

AIOSTREAMS_HOSTNAME=
AIOSTREAMS_SECRET_KEY=
AIOSTREAMS_API_KEY=
AIOSTREAMS_DATABASE_URI=sqlite:///app/data/db.sqlite
AIO_TRUSTED_UUIDS=
REGEX_FILTER_ACCESS=trusted # none, all, trusted
STREAM_CACHE_TTL=300

MAX_ADDONS=100
MAX_KEYWORD_FILTERS=100
MAX_MOVIE_SIZE=161061273600
MAX_EPISODE_SIZE=161061273600
MAX_TIMEOUT=50000
LOG_TIMEZONE=America/New_York
MIN_TIMEOUT=1000
MEDIAFLOW_IP_TIMEOUT=30000
ADDON_PROXY=http://gluetun:8080 # http://gluetun:8080 or http://warp:1080
ADDON_PROXY_CONFIG=*:false,*.strem.fun:true   # only route requests to any strem.fun subdomain through the proxy
EASYNEWS_PLUS_URL=http://easynews-plus:1337/
MEDIAFUSION_URL=http://mediafusion:8000/
MEDIAFUSION_CONFIG_TIMEOUT=3000
COMET_URL=http://comet:2020/
JACKETTIO_URL=http://jackettio:4000/
STREMIO_JACKETT_URL=http://stremio-jackett:3000/
JACKETT_URL=http://jackett:9117/
JACKETT_API_KEY=${JACKETT_API_KEY:-}
SECRET_KEY=${AIOSTREAMS_SECRET_KEY} # openssl rand -hex 32
DEFAULT_TIMEOUT=10000
ADDON_PASSWORD=${AIOSTREAMS_API_KEY}
STREMTHRU_STORE_URL=http://stremthru:8080/stremio/store/
DEFAULT_JACKETTIO_STREMTHRU_URL=http://stremthru:8080/
FORCE_COMET_PORT=
FORCE_COMET_PROTOCOL=https
EASYNEWS_PLUS_PLUS_URL=https://enpp.oia.lol/
TORBOX_STREMIO_URL=https://stremio.torbox.app/
STREMTHRU_TORZ_URL=http://stremthru:8080/stremio/torz/
ANIME_KITSU_URL=http://kitsu:7001/
DEBRIDIO_URL=https://addon.debridio.com
PRUNE_MAX_DAYS=30
PRECACHE_NEXT_EPISODE_MIN_INTERVAL=86400

# ==============================================================================
#                           RATE LIMIT CONFIGURATION
# ==============================================================================
# Configure rate limits to prevent abuse. Typically, defaults are fine.

# --- Disable Rate Limits ---
# Set to true to disable all rate limits (NOT RECOMMENDED).
# Default: false
DISABLE_RATE_LIMITS=false

# Window and Max requests refer to the maximum number of requests a user can make within a specific timeframe

# --- Static File Serving ---
STATIC_RATE_LIMIT_WINDOW=5
STATIC_RATE_LIMIT_MAX_REQUESTS=200

# --- User API ---
USER_API_RATE_LIMIT_WINDOW=5
USER_API_RATE_LIMIT_MAX_REQUESTS=15

# --- Stream API ---
STREAM_API_RATE_LIMIT_WINDOW=5
STREAM_API_RATE_LIMIT_MAX_REQUESTS=15

# --- Format API ---
FORMAT_API_RATE_LIMIT_WINDOW=5
FORMAT_API_RATE_LIMIT_MAX_REQUESTS=20

# --- Catalog API ---
CATALOG_API_RATE_LIMIT_WINDOW=5
CATALOG_API_RATE_LIMIT_MAX_REQUESTS=10

# --- Stremio Stream ---
STREMIO_STREAM_RATE_LIMIT_WINDOW=5
STREMIO_STREAM_RATE_LIMIT_MAX_REQUESTS=15

# --- Stremio Catalog ---
STREMIO_CATALOG_RATE_LIMIT_WINDOW=5
STREMIO_CATALOG_RATE_LIMIT_MAX_REQUESTS=15


#  ██████╗ ██████╗ ███╗   ███╗███████╗████████╗    ███████╗███╗   ██╗██╗   ██╗███████╗
# ██╔════╝██╔═══██╗████╗ ████║██╔════╝╚══██╔══╝    ██╔════╝████╗  ██║██║   ██║██╔════╝
# ██║     ██║   ██║██╔████╔██║█████╗     ██║       █████╗  ██╔██╗ ██║██║   ██║███████╗
# ██║     ██║   ██║██║╚██╔╝██║██╔══╝     ██║       ██╔══╝  ██║╚██╗██║██║   ██║╚════██║
# ╚██████╗╚██████╔╝██║ ╚═╝ ██║███████╗   ██║       ███████╗██║ ╚████║╚██████╔╝███████║
#  ╚═════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝   ╚═╝       ╚══════╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝
#
#                                   Comet .envs

COMET_ADMIN_PASSWORD=
COMET_HOSTNAME=
COMET_INDEXERS=

# Mediaflow

MEDIAFLOW_API_PASSWORD=
MEDIAFLOW_HOSTNAME=

MEDIAFUSION_API_PASSWORD=
MEDIAFUSION_HOSTNAME=
MEDIAFUSION_HOSTNAME_2=

MEDIAFUSION_SECRET_KEY=

STREMIO_JACKETT_HOSTNAME=

JACKETTIO_HOSTNAME=

STREMTHRU_HOSTNAME=
STREMTHRU_HOSTNAME_2=
STREMTHRU_PROXY_AUTH=
STREMTHRU_STORE_AUTH=


STREMTHRU_FEATURE=


STREMTHRU_INTEGRATION_TRAKT_CLIENT_ID=
STREMTHRU_INTEGRATION_TRAKT_CLIENT_SECRET=

EASYNEWS_PLUS_HOSTNAME=

PROWLARR_API_KEY=
PROWLARR_HOSTNAME=

KITSU_HOSTNAME=

# This needs to be the one from the Jackett dashboard. If it is your first time running
JACKETT_API_KEY=
JACKETT_HOSTNAME=

NZBHYDRA2_HOSTNAME=
NZBHYDRA2_HOSTNAME_2=

TMDB_ADDON_HOSTNAME=

POSTGRES_USER=
POSTGRES_PASSWORD=

# Get your API key and Access token from https://www.themoviedb.org/settings/api
TMDB_API_KEY=
TMDB_ACCESS_TOKEN=

# Get your API key from https://fanart.tv/get-an-api-key/
FANART_API_KEY=

# Any email address will do
LETSENCRYPT_EMAIL=

# The cron schedule for auto updates.
# https://pkg.go.dev/github.com/robfig/cron@v1.2.0#hdr-CRON_Expression_Format
AUTO_UPDATE_SCHEDULE=

# https://containrrr.dev/shoutrrr/v0.8/services/overview/
AUTO_UPDATE_NOTIFICATION_URL=

# Timezone used for auto updates, and other services that require a timezone e.g. Prowlarr, Jackett, etc.
# https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
TZ=  

# Dozzle provides a web interface for viewing logs, it will be available at DOZZLE_HOSTNAME
# To get the hashed password, run the following command in your terminal, replacing <username> with your desired username.
# install apache2-utils if its not already installed, you can do this by running `sudo apt-get install apache2-utils`
# htpasswd -nB <username>
# This will prompt you to enter a password, and then it will output the hashed password in the format <username>:<hashed_password>
# put the <username> and <hashed_password> in the DOZZLE_USERNAME and DOZZLE_HASHED_PASSWORD fields respectively.
# IMPORTANT: You will need to replace any $ in the hashed password with $$ to escape it, as $ is a special character in docker-compose files.

DOZZLE_USERNAME=
DOZZLE_HASHED_PASSWORD=
DOZZLE_HOSTNAME=

UPTIME_KUMA_HOSTNAME=
STATUS_PAGE_HOSTNAME=
FUN_PAGE_HOSTNAME=
FUN_PAGE_HOSTNAME2=

FLAME_HOSTNAME=
FLAME_PASSWORD=

# FOR SEANIME ONLY:
# To get the hash for SEANIME_HASHED_PASSWORD, run the following command in your terminal, replacing <username> with your desired username.
#
# htpasswd -nB <username>
# NOTE: you may need to install apache2-utils if its not already installed, you can do this by running `sudo apt-get install apache2-utils`
#
# you need to uncomment the seanime service in the compose.yaml file at the bottom and uncomment the following lines and fill them in.
#
SEANIME_HOSTNAME=
SEANIME_USERNAME=
SEANIME_HASHED_PASSWORD=

JELLYFIN_HOSTNAME=

ADDON_MANAGER_HOSTNAME=

HONEY_HOSTNAME=
DASH_HOSTNAME=

CHIBISAFE_HOSTNAME=
CHIBISAFE_ADMIN_PASSWORD=
CHIBISAFE_CDN_HOSTNAME=

MATRIX_HOSTNAME=
CINNY_HOSTNAME=

THELOUNGE_HOSTNAME=
IRC_HOSTNAME=

MINECRAFT_ICON=
MINECRAFT_HOSTNAME=

DOCKGE_HOSTNAME=

VAULTWARDEN_HOSTNAME=
VAULTWARDEN_ADMIN_TOKEN=

AUTHELIA_HOSTNAME=
PUID=
PGID=
AUTHELIA_SESSION_SECRET=
AUTHELIA_STORAGE_ENCRYPTION_KEY=
AUTHELIA_JWT_SECRET=
DOMAIN=

TORBOX_MANAGER_HOSTNAME=

TORBOX_API_KEY=
TORBOX_MEDIA_CENTER_HOSTNAME=

TRAEFIK_HOSTNAME=
TRUSTED_IPS=
DOCKER_NETWORK=

NITTER_HOSTNAME=
FXTWITTER_HOSTNAME=

COBALT_HOSTNAME=
COBALT_API=

EASYNEWS_PLUS_PLUS_HOSTNAME=

YAMTRACK_HOSTNAME=

# ███████████████████████████████████████████████████████████████████████████
# █▌                                                                       ▐█
# █▌ ██╗   ██╗ █████╗ ███╗   ███╗████████╗██████╗  █████╗  ██████╗██╗  ██╗ ▐█
# █▌ ╚██╗ ██╔╝██╔══██╗████╗ ████║╚══██╔══╝██╔══██╗██╔══██╗██╔════╝██║ ██╔╝ ▐█
# █▌  ╚████╔╝ ███████║██╔████╔██║   ██║   ██████╔╝███████║██║     █████╔╝  ▐█
# █▌   ╚██╔╝  ██╔══██║██║╚██╔╝██║   ██║   ██╔══██╗██╔══██║██║     ██╔═██╗  ▐█
# █▌    ██║   ██║  ██║██║ ╚═╝ ██║   ██║   ██║  ██║██║  ██║╚██████╗██║  ██╗ ▐█
# █▌    ╚═╝   ╚═╝  ╚═╝╚═╝     ╚═╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝ ▐█
# █▌                                                                       ▐█
# ███████████████████████████████████████████████████████████████████████████

# This file is used to configure Yamtrack.

# ==========================
#    Application Settings
# ==========================
URLS=
# Whether to enable or disable registration. If you don't want to allow registration, set this to False.
REGISTRATION=


# ==========================
#        Database Settings
# ==========================
# The redis URL for Yamtrack, do not change this. 
REDIS_URL=
# A cryptographic key, generate one using the command below
# echo "$(openssl rand -base64 64 | tr -d '=/' | tr -d '\n')"
SECRET=

# ==========================
#       Media Sources 
# ==========================
# Configuration for the media sources that Yamtrack uses

# -------------------
#     TMDB
# -------------------
# Settings for https://www.themoviedb.org/
# Used for movies, TV shows, and anime
#
# TMDB API Key, can be obtained at https://www.themoviedb.org/settings/api
TMDB_API=
# Whether to enable adult content. 
TMDB_NSFW=
# The language to use for TMDB. Provide a ISO 639-1 language code (e.g. en, fr, de), 
# optionally followed by a specific ISO-3166-1 country code (e.g. US, GB, FR)
# e.g en or en-US
# ISO 639-1: https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes (Set 1 Column)
# ISO-3166-1: https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes (A-2 Column)
TMDB_LANGUAGE=


# -------------------
#      MyAnimeList  
# -------------------
# Settings for https://myanimelist.net/
# Used for anime and manga
#
# The Client ID to use for MAL. A default one is provided and can be used without issues.
# However, you can create your own application at https://myanimelist.net/apiconfig/create
# Use the 'Other' application type and the redirect URL can be set to anything e.g https://github.com/FuzzyGrim/Yamtrack
# MAL_API=
# Whether to enable adult content on MAL.
MAL_NSFW=


# -------------------
#   MangaUpdates
# -------------------
# Settings for https://www.mangaupdates.com/
# Used for manga.
#
# Whether to enable adult content on MangaUpdates.
MU_NSFW=


# -------------------
#     IGDB
# -------------------
# Settings for https://www.igdb.com/
# Used for games.
#
# The Client ID and secret to use for IGDB. A default one is provided, but it is recommended to create your own application as it has lower rate limits.
# You will need a Twitch account, follow the steps at https://api-docs.igdb.com/#account-creation 
# to get a Twitch Application client ID and secret.
# IGDB_ID=
# IGDB_SECRET=
# Whether to enable adult content on IGDB.
IGDB_NSFW=

# =========================
#        MEDIA IMPORTING
# =========================
# These settings allow you to control the applications used to import media into Yamtrack from other sources. 

# -------------------
#     Trakt
# -------------------

# The Trakt Client ID. A default one is provided.
# However, you can create your own application at https://trakt.tv/oauth/applications/new
# The redirect URL can be set to anything e.g https://github.com/FuzzyGrim/Yamtrack
# TRAKT_ID=

# --------------------
#     Simkl
# --------------------

# The Simkl Client ID. A default one is provided.
# However, you can create your own application at https://simkl.com/settings/developer/new/custom-search/ 
# SIMKL_ID=
# SIMKL_SECRET=



LIBRESPEED_HOSTNAME=
LIBRESPEED_TITLE=

SPEEDTEST_TRACKER_HOSTNAME=
APP_KEY=

NTFY_HOSTNAME=

# __| |_____________________________________________________________| |__
# __   _____________________________________________________________   __
#   | |                                                             | |  
#   | | █████╗ ██╗   ██╗████████╗██╗  ██╗███████╗██╗     ██╗ █████╗ | |  
#   | |██╔══██╗██║   ██║╚══██╔══╝██║  ██║██╔════╝██║     ██║██╔══██╗| |  
#   | |███████║██║   ██║   ██║   ███████║█████╗  ██║     ██║███████║| |  
#   | |██╔══██║██║   ██║   ██║   ██╔══██║██╔══╝  ██║     ██║██╔══██║| |  
#   | |██║  ██║╚██████╔╝   ██║   ██║  ██║███████╗███████╗██║██║  ██║| |  
#   | |╚═╝  ╚═╝ ╚═════╝    ╚═╝   ╚═╝  ╚═╝╚══════╝╚══════╝╚═╝╚═╝  ╚═╝| |  
# __| |_____________________________________________________________| |__
# __   _____________________________________________________________   __
#   | |                                                             | |  

# Authelia is the authentication server for our services.
# It allows us to expose our services to the internet in a secure way.
# When accessing a service, if authelia is configured as a middleware for that service, Traefik will redirect the user to authelia for authentication.
# Once authenticated, the user will be redirected back to the service they were trying to access.
# 
# Note: Due to the way Stremio addons work, they cannot be protected by Authelia.
# This is because the addons need to be publicly accessible in order for Stremio (and other stremio addon clients) to be able to access them.

# The display name for WebAuthn that shows in the browser. 
AUTHELIA_WEBAUTHN_DISPLAY_NAME=

# The valid users for Authelia are stored in the users.yml file.
# This is located in `${DOCKER_DATA_DIR}/data/authelia/config/users.yml`
# You must add your users to this file in order to be able to access secured services.

# Note: When you first login with a user, Authelia will ask for a code that it says it sent to you.
# This will be located in the notification.txt file in the same directory as the users.yml file.
# You can run this command to view the file, replacing ${DOCKER_DATA_DIR} with its actual value:
# cat ${DOCKER_DATA_DIR}/data/authelia/config/notification.txt

# A list of domains to apply page specific rules to.
# Although we can't fully protect Stremio addons, we can still add authentication to specific pages like the configuration pages. 
# All the domains within this comma separated list will have specific pages protected with Authelia.
# Do NOT include non-stremio addon domains here. It would mean that those services would not be fully protected, or in most cases not protected at all.
STREMIO_ADDON_HOSTNAMES=


APPRISE_API_HOSTNAME=

# Redlib configuration
# Instance-specific settings
REDLIB_HOSTNAME=
# Enable SFW-only mode for the instance
REDLIB_SFW_ONLY=
# Set a banner message for the instance
REDLIB_BANNER=
# Disable search engine indexing
REDLIB_ROBOTS_DISABLE_INDEXING=
# Set the Pushshift frontend for "removed" links
REDLIB_PUSHSHIFT_FRONTEND=

# Default user settings
# Set the default theme (options: system, light, dark, black, dracula, nord, laserwave, violet, gold, rosebox, gruvboxdark, gruvboxlight)
REDLIB_DEFAULT_THEME=
# Set the default front page (options: default, popular, all)
REDLIB_DEFAULT_FRONT_PAGE=
# Set the default layout (options: card, clean, compact)
REDLIB_DEFAULT_LAYOUT=
# Enable wide mode by default
REDLIB_DEFAULT_WIDE=
# Set the default post sort method (options: hot, new, top, rising, controversial)
REDLIB_DEFAULT_POST_SORT=
# Set the default comment sort method (options: confidence, top, new, controversial, old)
REDLIB_DEFAULT_COMMENT_SORT=
# Enable blurring Spoiler content by default
REDLIB_DEFAULT_BLUR_SPOILER=
# Enable showing NSFW content by default
REDLIB_DEFAULT_SHOW_NSFW=
# Enable blurring NSFW content by default
REDLIB_DEFAULT_BLUR_NSFW=
# Enable HLS video format by default
REDLIB_DEFAULT_USE_HLS=
# Hide HLS notification by default
REDLIB_DEFAULT_HIDE_HLS_NOTIFICATION=
# Disable autoplay videos by default
REDLIB_DEFAULT_AUTOPLAY_VIDEOS=
# Define a default list of subreddit subscriptions (format: sub1+sub2+sub3)
REDLIB_DEFAULT_SUBSCRIPTIONS=
# Define a default list of subreddit filters (format: sub1+sub2+sub3)
REDLIB_DEFAULT_FILTERS=
# Hide awards by default
REDLIB_DEFAULT_HIDE_AWARDS=
# Hide sidebar and summary
REDLIB_DEFAULT_HIDE_SIDEBAR_AND_SUMMARY=
# Disable the confirmation before visiting Reddit
REDLIB_DEFAULT_DISABLE_VISIT_REDDIT_CONFIRMATION=
# Hide score by default
REDLIB_DEFAULT_HIDE_SCORE=
# Enable fixed navbar by default
REDLIB_DEFAULT_FIXED_NAVBAR=

#=======================================================================================================
# 🧠 Borgmatic + BorgBase Setup
# Coupled with https://www.borgbase.com/ — which offers 10 GB free encrypted backup storage.
# Thanks to efficient deduplication and compression, actual usage remains low even for large datasets.

# 🔐 Your BorgBase repository SSH path
BORG_REPO_URL=

# 🗝️ Borg encryption passphrase (do not hardcode in config.yaml)
BORG_PASSPHRASE=

# 🕓 Backup cron schedule (Every Sunday at 4AM)
BACKUP_CRON=
RUN_ON_STARTUP=

# 🌍 These values are inherited from your root /opt/docker/.env

# ✅ One-time SSH key setup (run before container start):
# mkdir -p /opt/docker/data/borgmatic/.ssh
# ssh-keygen -t ed25519 -f /opt/docker/data/borgmatic/.ssh/id_ed25519 -N ""
# ➕ Copy the id_ed25519.pub content to your BorgBase repository SSH key section

# 📁 Optional (can also be auto-created at container start):
# mkdir -p /opt/docker/data/borgmatic/{repo,borg,cache,logs}

# 🔑 After initializing the repo, export your Borg key!
# docker exec -it borgmatic sh
# borg key export $BORG_REPO_URL /root/.config/borg/borgbase-key-backup
# exit
# docker cp borgmatic:/root/.config/borg/borgbase-key-backup ~/borgbase-key-backup
# 📌 Keep ~/borgbase-key-backup in a safe, secure place (e.g., password manager or external drive)

#=======================================================================================================

ARCANE_HOSTNAME=

QUETRE_HOSTNAME=

# This file is used to configure the gluetun container.
# It is currently setup for ProtonVPN, as it is free. If you would like to configure gluetun
# for another provider, please see the Gluetun wiki: https://github.com/qdm12/gluetun-wiki/tree/main/setup/providers

VPN_SERVICE_PROVIDER=
SERVER_COUNTRIES=
SERVER_CITIES=
# If you are using a paid ProtonVPN account, you can set this to true to only use free servers.
FREE_ONLY=
# Server list updater
# See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
UPDATER_PERIOD=

# VPN Authentication
# If you want to use WireGuard, you will need the wireguard private key.
# Follow this guide: https://protonvpn.com/support/wireguard-configurations/
# Or obtain it directly from here: https://account.proton.me/u/0/vpn/WireGuard

VPN_TYPE=
WIREGUARD_PRIVATE_KEY=
PORT_FORWARD_ONLY=

# If you want to use OpenVPN, you need the OpenVPN username specific to your ProtonVPN account.
# Change the VPN_TYPE to openvpn and set the username and password below.
# Get the credentials from here: https://account.proton.me/u/0/vpn/OpenVpnIKEv2
# OPENVPN_USER=
# OPENVPN_PASSWORD=
#
# With this setup, you can now use gluetun:8080 as a HTTP/SOCKS5 proxy.

SEARXNG_HOSTNAME=

ANONYMOUS_HOSTNAME=
